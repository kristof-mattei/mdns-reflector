[package]
name = "mdns-reflector"
# don't change this, it's updated before an actual build by update-version.sh
version = "0.0.0-development"
edition = "2024"
rust-version = "1.87.0"
authors = ["Kristof Mattei"]
description = "mdns-reflector"
license-file = "LICENSE"
categories = ["network"]
keywords = ["mdns", "reflect", "docker"]
repository = "https://github.com/kristof-mattei/mdns-reflector"

[lints.clippy]
# don't stop from compiling / running
all = "warn"
cargo = "warn"
complexity = "warn"
correctness = "warn"
pedantic = "warn"
perf = "warn"
# restriction = "warn"
style = "warn"
suspicious = "warn"

# this has 0 performance implications, the binding is compiled away, and it could cause issues
# when done blindly, plus it makes it harder to debug as you cannot put breakpoints on return
# values of functions (yet)
let_and_return = { level = "allow", priority = 127 }
# this one is debatable. continue is used in places to be explicit, and to guard against
# issues when refactoring
needless_continue = { level = "allow", priority = 127 }
# this one causes confusion when combining variables (`foo`) and
# dereferenced variables (`foo.bar`). The latter cannot be inlined
# so we don't inline anything
uninlined-format-args = { level = "allow", priority = 127 }

[lints.rust]
let_underscore_drop = { level = "deny", priority = 127 }
non_ascii_idents = { level = "deny", priority = 127 }

[features]
default = []
ip_pktinfo = []
so_bindtodevice = []
tokio-console = ["dep:console-subscriber"]

[dependencies]
clap = { version = "4.5.40", features = ["cargo", "derive", "string"] }
color-eyre = "0.6.5"
console-subscriber = { version = "0.4.1", optional = true }
const_format = "0.2.34"
libc = "0.2.172"
socket2 = { version = "0.5.10" }
syslog-tracing = "0.3.1"
tokio = { version = "1.45.1", features = [
    "macros",
    "net",
    "rt-multi-thread",
    "signal",
    "time",
] }
tokio-util = { version = "0.7.15", features = ["rt"] }
tracing = "0.1.41"
tracing-error = "0.2.1"
tracing-subscriber = { version = "0.3.19", features = [
    "env-filter",
    "time",
    "tracing-log",
] }
